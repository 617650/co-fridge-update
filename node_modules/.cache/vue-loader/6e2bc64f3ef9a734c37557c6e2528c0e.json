{"remainingRequest":"C:\\Users\\isabe\\Desktop\\web-projects\\co-fridge\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\isabe\\Desktop\\web-projects\\co-fridge\\src\\components\\item\\ClaimButton.vue?vue&type=style&index=0&id=bf8036fc&scoped=true&lang=css&","dependencies":[{"path":"C:\\Users\\isabe\\Desktop\\web-projects\\co-fridge\\src\\components\\item\\ClaimButton.vue","mtime":1642052742891},{"path":"C:\\Users\\isabe\\Desktop\\web-projects\\co-fridge\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\isabe\\Desktop\\web-projects\\co-fridge\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\isabe\\Desktop\\web-projects\\co-fridge\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\isabe\\Desktop\\web-projects\\co-fridge\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\isabe\\Desktop\\web-projects\\co-fridge\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgouYmx1ZS1jb2xvciB7CiAgICBjb2xvcjogIzNjYTNkODsKfQo="},{"version":3,"sources":["ClaimButton.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4FA;AACA;AACA","file":"ClaimButton.vue","sourceRoot":"src/components/item","sourcesContent":["<template>\n<div class=\"claim\">\n    <div>\n        <select class=\"claim-quantity\" v-model=\"quantity\" v-show=\"!claimed\">\n            <option disabled value=\"\">Please select one</option>\n            <option v-for=\"n in ListNumber(item.quantity)\" v-bind:key=\"n\">\n                {{ n }}\n            </option>\n        </select>\n        <button class=\"button\" :disabled=\"isDisabled\" v-on:click=\"SubmitClaim()\">\n            {{ claimButton.text }}\n        </button>\n    </div>\n</div>\n</template>\n\n<script>\n// import { defineComponent } from '@vue/composition-api'\nimport axios from \"axios\";\nimport {\n    eventBus\n} from \"../../main\";\nexport default {\n    name: \"ClaimButton\",\n    props: {\n        item: {\n            type: Object,\n            required: true,\n        },\n    },\n    data() {\n        return {\n            claimButton: {\n                text: \"Claim\",\n            },\n            claimed: false,\n            open: false,\n            quantity: 0,\n        };\n    },\n\n    mounted: function () {\n        this.ChangeButtonText();\n        eventBus.$on(\"claim-item-success\", () => {\n            this.ChangeButtonText();\n        });\n    },\n    computed:{\n      isDisabled: function(){\n        console.log(this.claimed)\n        return this.claimed;\n      }\n    },\n    methods: {\n        ListNumber(highEnd) {\n            var list = [];\n            for (var i = 1; i <= highEnd; i++) {\n                list.push(i);\n            }\n            return list;\n        },\n        SubmitClaim() {\n            axios\n                .post(\"/api/item/claim/\" + this.item.id, {\n                    quantity: this.quantity\n                })\n                .then((response) => {\n                    this.open = false;\n                    eventBus.$emit(\"claim-item-success\", {\n                        data: response.data,\n                    });\n                    this.quantity=0;\n                    // this.claimed = true;\n                    // this.claimButton.text = \"Claimed\";\n                })\n                .catch((error) => {\n                    if (error.response && error.response.status != 200) {\n                        alert(error.response.data.error);\n                    }\n                });\n        },\n        ChangeButtonText() {\n            if (this.item.status != 0) {\n               this.claimed=true;\n                this.claimButton.text = \"Out of stock\";\n            }\n        },\n    },\n};\n</script>\n\n<style scoped>\n.blue-color {\n    color: #3ca3d8;\n}\n</style>\n"]}]}